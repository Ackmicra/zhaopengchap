package com.uranus.platform.utils.jd.security;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;

/**
 * @author 李亚斌
 * @date 2019/07/30 19:23
 * @since v1.1
 */
@SpringBootTest
class SignEnvelopServiceKeyTest {
    @Autowired
    private SignEnvelopServiceKey signEnvelopServiceKey;

    @Test
    void signEnvelop(){
        // 源数据串签约申请
//    	String data = "{\"channelProdNo\":\"2004101\",\"payeeAccountName\":\"徐海艳\",\"payeeCeritificateType\":	\"01\",\"payeeCeritificateNo\":\"530128198510290020\",\"payeeMobileNo\":\"13698520009\",	\"payeeAccountNo\":\"6217003900004811990\",\"payeeBankCode\":\"CCB\",\"paymentChannel\":\"1\"}";
        // 源数据串签约确认
//    	String data = "{\"channelProdNo\":\"2004101\",\"signTransactionNo\":\"1565336128502351\",\"verificationCode\":\"123456\"}";
    	//还款计划上传
//    	String data = "{\"applicationNo\":\"CS201908020000119\",\"repayPlans\":[{\"issue\":\"1\",\"startDate\":\"2019-08-13\",\"startRateDate\":\"2019-08-13\",\"refundDate\":\"2019-08-15\",\"endDate\":\"2019-08-15\",\"refundPrincipal\":\"0\",\"refundInterest\":\"1000.00\",\"surplusPrincipal\":\"49999.00\",\"refundServiceCharge\":\"0\"},{\"issue\":\"2\",\"startDate\":\"2019-08-15\",\"startRateDate\":\"2019-08-15\",\"refundDate\":\"2019-09-15\",\"endDate\":\"2019-09-15\",\"refundPrincipal\":\"0\",\"refundInterest\":\"1000.00\",\"surplusPrincipal\":\"49999.00\",\"refundServiceCharge\":\"0\"},{\"issue\":\"3\",\"startDate\":\"2019-09-15\",\"startRateDate\":\"2019-09-15\",\"refundDate\":\"2019-10-15\",\"endDate\":\"2019-10-15\",\"refundPrincipal\":\"49999.00\",\"refundInterest\":\"1000.00\",\"surplusPrincipal\":\"0\",\"refundServiceCharge\":\"0\"}]}";
//    	String data = "{\"contractNo\":\"BT000000004\",\"channelProdNo\":\"2004101\",\"applicationPlace\":\"0001\",\"applicationNo\":\"MFS000000004\",\"application\":\"申请用途描述测试\",\"contractAmount\":\"10000.00\",\"amountPayed\":\"20000.00\",\"currencyType\":\"01\",\"periodType\":\"02\",\"expiresMonth\":\"12\",\"refundMethod\":\"01\",\"chargeDateType\":\"01\",\"chargeDateType2\":\"02\",\"chargeDate\":\"11\",\"branchOffice\":\"贷款受理分支机构\",\"paymentWay\":\"99\",\"loanType\":\"01\",\"borrowerType\":\"01\",\"handlingCharge\":\"0\",\"handlingChargeRate\":\"0\",\"primaryRateType\":\"01\",\"primaryRate\":\"2.1\",\"isForward\":\"01\",\"penaltyRate\":\"3.1\",\"monthlyPenalty\":\"4.1\",\"serviceCharge\":\"100\",\"serviceChargeRate\":\"5.1\",\"earnestMoney\":\"0\",\"deposit\":\"200.00\",\"expireDate\":\"2020-12-12\",\"downPayment\":\"1000\",\"monthlyPayment\":\"500\",\"signedCity\":\"北京市\",\"securedAccount\":\"000100020003\",\"loanUser\":[{\"name\":\"王花花\",\"ceritificateType\":\"0\",\"ceritificateNo\":\"512501197203035172\",\"effstartdate\":\"2008-12-12\",\"effenddate\":\"2028-12-12\",\"authroity\":\"123123123123\",\"nation\":\"汉族\",\"job\":\"asdasd\",\"telephone\":\"13000000000\",\"cellphone\":\"17000000000\",\"postcode\":\"100010\",\"address\":\"北京市东城区\",\"email\":\"test@xxx.com\",\"maritalStatus\":\"10\",\"education\":\"10\",\"censusRegister\":\"1234\",\"censusRegisterAddress\":\"12321321321\",\"monthlyIncome\":\"110000\",\"homeAddress\":\"123213213\",\"homePostcode\":\"131313\",\"homeTelphone\":\"131313131313\",\"userNetAssets\":\"100000000.00\",\"userHouseValue\":\"1000000.00\",\"userHouseArea\":\"900.00\",\"realEstateType\":\"1\"}],\"relationUsers\":[{\"relationUserType\":\"01\",\"relationType\":\"2\",\"name\":\"王五\",\"certificateType\":\"0\",\"certificateNo\":\"1000001010\",\"company\":\"北京市东城区\",\"telephone\":\"12000000000\",\"email\":\"testrel@xxx.com\",\"monthlyIncome\":\"10000.00\",\"valid\":\"0\",\"bookletNumber\":\"123123\",\"houseRegisAddr\":\"北京市\",\"address\":\"北京市东城区\",\"usedName\":\"王四\",\"marrStatus\":\"10\",\"flyBrithdt\":\"19901010\",\"guaranteeAmount\":\"100000.00\"}],\"loanAccount\":[{\"accountName\":\"王花花\",\"accountNo\":\"321312312\",\"accountType\":\"11\",\"bankName\":\"中国银行\",\"bankCnaps\":\"32131213123\",\"bankCode\":\"ABC\",\"bankBranchName\":\"13131313\",\"bankBranchProvince\":\"123\",\"bankBranchCity\":\"123\",\"holderMobileNo\":\"17000000000\",\"holderIdType\":\"01\",\"holderIdNo\":\"512501197203035172\",\"holderEmail\":\"testloanAccount@xxx.com\"}],\"repayAccount\":[{\"accountName\":\"王花花\",\"accountNo\":\"321312312\",\"accountType\":\"11\",\"bankName\":\"中国银行\",\"bankCnaps\":\"32131213123\",\"bankCode\":\"ABC\",\"bankBranchName\":\"13131313\",\"bankBranchProvince\":\"123\",\"bankBranchCity\":\"123\",\"holderMobileNo\":\"17000000000\",\"holderIdType\":\"0\",\"holderIdNo\":\"512501197203035172\",\"holderEmail\":\"test@xxx.com\"}],\"loanPaymentSteps\":[{\"applicationNo\":\"001002003\",\"paymentNo\":\"123\",\"paymentAmount\":\"100000.00\",\"receivingAccount\":[{\"accountName\":\"王花花\",\"accountNo\":\"321312312\",\"accountType\":\"11\",\"bankName\":\"中国银行\",\"bankCnaps\":\"32131213123\",\"bankCode\":\"ABC\",\"bankBranchName\":\"13131313\",\"bankBranchProvince\":\"123\",\"bankBranchCity\":\"123\",\"holderMobileNo\":\"17000000000\",\"holderIdType\":\"0\",\"holderIdNo\":\"1002020202\",\"holderEmail\":\"test@xxx.com\"}]}]}";
//    	String data = "{\"applicationNo\":\"1168732792640872448\"}";
//    	String data = "{\"batchNum\":\"1171604616525504512\"}";
    	String data = "{\"transferType\":\"1002\",\"batchNumber\":\"1171604616525504512\"}";
    	
    	String encodeData = signEnvelopServiceKey.signEnvelop(data);
        System.out.println("加密后的数据为:" + encodeData);
        Assertions.assertNotNull(encodeData);

        String resultData = "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";
        String decodeData = signEnvelopServiceKey.verifyEnvelop(resultData);
        System.out.println(decodeData);
        Assertions.assertNotNull(decodeData);
    }

}